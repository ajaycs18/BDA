cqlsh> CREATE KEYSPACE students WITH REPLICATION = {'class' : 'SimpleStrategy', 'replication_factor' : 1};
cqlsh> DESCRIBE KEYSPACES;

students  system_schema  system_auth  system  system_distributed  system_traces

cqlsh> USE students;
cqlsh:students> CREATE TABLE studentInfo (
            ... rollno int PRIMARY KEY,
            ... name text,
            ... dateofjoining timestamp,
            ... lastexampercent double
            ... );
cqlsh:students> DESCRIBE TABLES;

studentinfo

cqlsh:students> DESCRIBE TABLE studentinfo

CREATE TABLE students.studentinfo (
    rollno int PRIMARY KEY,
    dateofjoining timestamp,
    lastexampercent double,
    name text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

cqlsh:students> BEGIN BATCH
            ... INSERT INTO studentinfo (rollno, name, dateofjoining, lastexampercent) VALUES (1, 'Ajay', '2020-02-11', 95);
            ... INSERT INTO studentinfo (rollno, name, dateofjoining, lastexampercent) VALUES (2, 'Akshay', '2020-02-15', 92);
            ... INSERT INTO studentinfo (rollno, name, dateofjoining, lastexampercent) VALUES (3, 'Rahul', '2020-02-23', 91.9);
            ... APPLY BATCH;
cqlsh:students> SELECT * FROM studentinfo;

 rollno | dateofjoining                   | lastexampercent | name
--------+---------------------------------+-----------------+--------
      1 | 2020-02-11 00:00:00.000000+0000 |              95 |   Ajay
      2 | 2020-02-15 00:00:00.000000+0000 |              92 | Akshay
      3 | 2020-02-23 00:00:00.000000+0000 |            91.9 |  Rahul

(3 rows)
cqlsh:students> SELECT * FROM Studentinfo WHERE RollNo IN (1,2);

 rollno | dateofjoining                   | lastexampercent | name
--------+---------------------------------+-----------------+--------
      1 | 2020-02-11 00:00:00.000000+0000 |              95 |   Ajay
      2 | 2020-02-15 00:00:00.000000+0000 |              92 | Akshay

(2 rows)
cqlsh:students> CREATE INDEX nameIndex ON studentinfo (name);
cqlsh:students> SELECT * FROM studentinfo WHERE name = 'Ajay';

 rollno | dateofjoining                   | lastexampercent | name
--------+---------------------------------+-----------------+------
      1 | 2020-02-11 00:00:00.000000+0000 |              95 | Ajay

(1 rows)
cqlsh:students> SELECT RollNo,LastExamPercent as "Score" FROM studentinfo;

 rollno | Score
--------+-------
      1 |    95
      2 |    92
      3 |  91.9

(3 rows)
cqlsh:students> UPDATE studentinfo SET lastexampercent = 99.9 WHERE name = 'Ajay';
InvalidRequest: Error from server: code=2200 [Invalid query] message="Some partition key parts are missing: rollno"
cqlsh:students> UPDATE studentinfo SET lastexampercent = 99.9 WHERE rollno = 1;
cqlsh:students> SELECT * FROM studentinfo;

 rollno | dateofjoining                   | lastexampercent | name
--------+---------------------------------+-----------------+--------
      1 | 2020-02-11 00:00:00.000000+0000 |            99.9 |   Ajay
      2 | 2020-02-15 00:00:00.000000+0000 |              92 | Akshay
      3 | 2020-02-23 00:00:00.000000+0000 |            91.9 |  Rahul

(3 rows)
cqlsh:students> DELETE FROM studentinfo where rollno = 3;
cqlsh:students> SELECT * FROM studentinfo;

 rollno | dateofjoining                   | lastexampercent | name
--------+---------------------------------+-----------------+--------
      1 | 2020-02-11 00:00:00.000000+0000 |            99.9 |   Ajay
      2 | 2020-02-15 00:00:00.000000+0000 |              92 | Akshay

(2 rows)
cqlsh:students> CREATE KEYSPACE project WITH REPLICATION = {'class' : 'SimpleStrategy', 'replication_factor' : 1};
cqlsh:students> use project;
cqlsh:project> CREATE TABLE projectDetails(pid int, pname text, stud_name text, duration int, PRIMARY KEY(pid,pname));cqlsh:project> DESCRIBE TABLE projectdetails

CREATE TABLE project.projectdetails (
    pid int,
    pname text,
    duration int,
    stud_name text,
    PRIMARY KEY (pid, pname)
) WITH CLUSTERING ORDER BY (pname ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

cqlsh:project> BEGIN BATCH           ... INSERT INTO projectdetails (pid, pname, duration, stud_name) VALUES (1, 'blockchain', 2, 'ajay');           ... INSERT INTO projectdetails (pid, pname, duration, stud_name) VALUES (2, 'ai', 3, 'akshay');           ... INSERT INTO projectdetails (pid, pname, duration, stud_name) VALUES (3, 'traffic management', 3, 'rahul');
           ... APPLY BATCH;
cqlsh:project> SELECT * FROM projectdetails;

 pid | pname              | duration | stud_name
-----+--------------------+----------+-----------
   1 |         blockchain |        2 |      ajay
   2 |                 ai |        3 |    akshay
   3 | traffic management |        3 |     rahul

(3 rows)
cqlsh:project> SELECT * FROM projectdetails WHERE pid = 3; pid | pname              | duration | stud_name
-----+--------------------+----------+-----------
   3 | traffic management |        3 |     rahul

(1 rows)
cqlsh:project> CREATE INDEX ON projectdetails(stud_name);
cqlsh:project> SELECT * FROM projectdetails WHERE stud_name = 'Ajay';

 pid | pname | duration | stud_name
-----+-------+----------+-----------

(0 rows)
cqlsh:project> SELECT * FROM projectdetails WHERE stud_name = 'ajay';

 pid | pname      | duration | stud_name
-----+------------+----------+-----------
   1 | blockchain |        2 |      ajay

(1 rows)
cqlsh:project> UPDATE projectdetails SET duration = 1 WHERE pid = 1 AND pname = 'blockchain';
cqlsh:project> SELECT * FROM projectdetails WHERE pname = 'blockchain' ALLOW FILTERING;

 pid | pname      | duration | stud_name
-----+------------+----------+-----------
   1 | blockchain |        1 |      ajay

(1 rows)
cqlsh:project> DELETE FROM projectdetails WHERE pid = 3 AND pname = 'traffic management';
cqlsh:project> SELECT * FROM projectdetails;

 pid | pname      | duration | stud_name
-----+------------+----------+-----------
   1 | blockchain |        1 |      ajay
   2 |         ai |        3 |    akshay

(2 rows)
cqlsh:project> DELETE duration FROM projectdetails WHERE pid = 1 AND pname = 'blockchain';
cqlsh:project> SELECT * FROM projectdetails;

 pid | pname      | duration | stud_name
-----+------------+----------+-----------
   1 | blockchain |     null |      ajay
   2 |         ai |        3 |    akshay

(2 rows)